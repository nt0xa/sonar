name: Build and test

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres_test # "_test" is required for fixtures
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      pebble:
        image: letsencrypt/pebble:latest
        env:
          PEBBLE_VA_NOSLEEP: 1
          PEBBLE_VA_ALWAYS_VALID: 1
          PEBBLE_AUTHZREUSE: 0
          PEBBLE_WFE_NONCEREJECT: 0
        ports:
          - 14000/tcp

    steps:
      - name: Install Golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.19.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: make build

      - name: Test
        run: make test
        env:
          SONAR_DB_DSN: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres_test?sslmode=disable'
          SONAR_DB_MIGRATIONS: internal/database/migrations
          CERTMGR_CA_DIR_URL: 'https://localhost:${{ job.services.pebble.ports[14000] }}/dir'

      - name: Code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.out
