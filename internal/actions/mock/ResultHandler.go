// Code generated by mockery v2.20.0. DO NOT EDIT.

package actions_mock

import (
	context "context"

	actions "github.com/russtone/sonar/internal/actions"

	mock "github.com/stretchr/testify/mock"
)

// ResultHandler is an autogenerated mock type for the ResultHandler type
type ResultHandler struct {
	mock.Mock
}

// DNSRecordsCreate provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) DNSRecordsCreate(_a0 context.Context, _a1 actions.DNSRecordsCreateResult) {
	_m.Called(_a0, _a1)
}

// DNSRecordsDelete provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) DNSRecordsDelete(_a0 context.Context, _a1 actions.DNSRecordsDeleteResult) {
	_m.Called(_a0, _a1)
}

// DNSRecordsList provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) DNSRecordsList(_a0 context.Context, _a1 actions.DNSRecordsListResult) {
	_m.Called(_a0, _a1)
}

// EventsGet provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) EventsGet(_a0 context.Context, _a1 actions.EventsGetResult) {
	_m.Called(_a0, _a1)
}

// EventsList provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) EventsList(_a0 context.Context, _a1 actions.EventsListResult) {
	_m.Called(_a0, _a1)
}

// HTTPRoutesCreate provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) HTTPRoutesCreate(_a0 context.Context, _a1 actions.HTTPRoutesCreateResult) {
	_m.Called(_a0, _a1)
}

// HTTPRoutesDelete provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) HTTPRoutesDelete(_a0 context.Context, _a1 actions.HTTPRoutesDeleteResult) {
	_m.Called(_a0, _a1)
}

// HTTPRoutesList provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) HTTPRoutesList(_a0 context.Context, _a1 actions.HTTPRoutesListResult) {
	_m.Called(_a0, _a1)
}

// PayloadsCreate provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) PayloadsCreate(_a0 context.Context, _a1 actions.PayloadsCreateResult) {
	_m.Called(_a0, _a1)
}

// PayloadsDelete provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) PayloadsDelete(_a0 context.Context, _a1 actions.PayloadsDeleteResult) {
	_m.Called(_a0, _a1)
}

// PayloadsList provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) PayloadsList(_a0 context.Context, _a1 actions.PayloadsListResult) {
	_m.Called(_a0, _a1)
}

// PayloadsUpdate provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) PayloadsUpdate(_a0 context.Context, _a1 actions.PayloadsUpdateResult) {
	_m.Called(_a0, _a1)
}

// ProfileGet provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) ProfileGet(_a0 context.Context, _a1 actions.ProfileGetResult) {
	_m.Called(_a0, _a1)
}

// UsersCreate provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) UsersCreate(_a0 context.Context, _a1 actions.UsersCreateResult) {
	_m.Called(_a0, _a1)
}

// UsersDelete provides a mock function with given fields: _a0, _a1
func (_m *ResultHandler) UsersDelete(_a0 context.Context, _a1 actions.UsersDeleteResult) {
	_m.Called(_a0, _a1)
}

type mockConstructorTestingTNewResultHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewResultHandler creates a new instance of ResultHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResultHandler(t mockConstructorTestingTNewResultHandler) *ResultHandler {
	mock := &ResultHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
